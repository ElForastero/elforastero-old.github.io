{"version":3,"file":"static/webpack/static/development/pages/_app.js.283dd6620fe4c9ce7907.hot-update.js","sources":["webpack:///./layouts/post.js","webpack:///./pages/_app.js"],"sourcesContent":["import React           from 'react';\nimport Sidebar         from '../components/sidebar';\nimport Navigation      from '../components/nav';\nimport Footer          from '../components/footer';\nimport ReadingProgress from '../components/readingProgress';\n\nexport default ({ title, subtitle, cover, date, children }) => (\n    <div className=\"wrapper\">\n        <ReadingProgress />\n        <Sidebar title={ title } subtitle={ subtitle } cover={ cover } />\n\n        <div className=\"main\">\n            <Navigation />\n\n            <div className=\"content\">\n                { children }\n            </div>\n\n            <Footer />\n        </div>\n\n        <style jsx global>{ `\n            #__next {\n                min-height: 100%;\n            }\n\n            .wrapper {\n              height: 100%;\n              display: flex;\n            }\n\n            .main {\n              flex: 1;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              overflow-y: auto;\n              background-color: #fff;\n            }\n\n            .content {\n              flex: 1 0;\n              max-width: 900px;\n              width: 100%;\n              padding: 50px 30px;\n              background-color: #fff;\n            }\n\n            .content img {\n                max-width: 100%;\n            }\n        ` }</style>\n    </div>\n)","import App, { Container } from 'next/app'\nimport React              from 'react'\nimport Layout             from '../layouts/post'\nimport posts              from '../posts';\nimport Styles             from '../layouts/styles';\n\n// Override the App class to put layout component around the page contents\n// https://github.com/zeit/next.js#custom-app\n\nexport default class MyApp extends App {\n    render() {\n        const { Component, pageProps } = this.props;\n        const { pathname } = this.props.router;\n        const meta = posts.find(post => post.urlPath === pathname);\n\n        return (\n            <Container>\n                {\n                    pathname !== '/' &&\n                    <Layout pathname={ pathname } { ...meta } >\n                        <Component { ...pageProps } />\n                    </Layout>\n                }\n\n                {\n                    pathname === '/' &&\n                    <Component { ...pageProps } />\n                }\n                <Styles />\n            </Container>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAtBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}