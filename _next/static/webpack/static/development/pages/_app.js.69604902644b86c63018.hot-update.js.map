{"version":3,"file":"static/webpack/static/development/pages/_app.js.69604902644b86c63018.hot-update.js","sources":["webpack:///./components/readingProgress.js","webpack:///./layouts/post.js","webpack:///./node_modules/scrollprogress/dist/scrollProgress.js"],"sourcesContent":["import React, { Component }  from 'react';\nimport ScrollProgress from 'scrollprogress';\n\nexport default class extends Component {\n    state = {\n        progress: 0\n    };\n\n    componentDidMount() {\n        this.progressObserver = new ScrollProgress((x, y) => {\n            this.setState({ progress: y * 100 });\n        });\n    }\n\n    componentWillUnmount() {\n        this.progressObserver.destroy();\n    }\n\n    render() {\n        const style = {\n            backgroundColor: 'rebeccapurple',\n            height: '5px',\n            position: 'fixed',\n            top: 0,\n            bottom: 0,\n            width: `${this.state.progress}%`\n        };\n\n        return (\n            <div\n                className=\"progress-bar\"\n                style={ style }\n            />\n        );\n    }\n}","import React           from 'react';\nimport Sidebar         from '../components/sidebar';\nimport Navigation      from '../components/nav';\nimport Footer          from '../components/footer';\nimport ReadingProgress from '../components/readingProgress';\nimport Styles          from './styles';\n\nexport default ({ title, subtitle, cover, date, children }) => (\n    <div className=\"wrapper\">\n        <Sidebar title={ title } subtitle={ subtitle } cover={ cover } />\n\n        <div className=\"main\">\n            <Navigation />\n\n            <div className=\"content\">\n                <ReadingProgress />\n                { children }\n            </div>\n\n            <Footer />\n        </div>\n\n        <style jsx global>{ `\n            #__next {\n                min-height: 100%;\n            }\n\n            .wrapper {\n              height: 100%;\n              display: flex;\n            }\n\n            .main {\n              flex: 1;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              overflow-y: auto;\n              background-color: #fff;\n            }\n\n            .content {\n              flex: 1 0;\n              max-width: 900px;\n              width: 100%;\n              padding: 50px 30px;\n              background-color: #fff;\n            }\n\n            .content img {\n                max-width: 100%;\n            }\n        ` }</style>\n        <Styles />\n    </div>\n)","/* scrollprogress v3.0.2 - 2017 Jeremias Menichelli - MIT License */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.ScrollProgress = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Fallback noop function\n   * @method noop\n   * @returns {undefined}\n   */\n  function noop() {}\n\n  /**\n   * ScrollProgress class constructor\n   * @constructor ScrollProgress\n   * @param {Function} handleUpdate method to call on scroll update\n   * @returns {undefined}\n   */\n  var ScrollProgress = function(handleUpdate) {\n    // assign function to call on update\n    this._handleUpdate = typeof handleUpdate === 'function'\n      ? handleUpdate\n      : noop;\n\n    // set initial values\n    this._viewportHeight = this._getViewportHeight();\n    this._viewportWidth = this._getViewportWidth();\n\n    this._progress = this._getProgress();\n\n    // trigger initial update function\n    this._handleUpdate(this._progress.x, this._progress.y);\n\n    // bind event functions\n    this._onScroll = this._onScroll.bind(this);\n    this._onResize = this._onResize.bind(this);\n\n    // add event listeners\n    window.addEventListener('scroll', this._onScroll);\n    window.addEventListener('resize', this._onResize);\n  };\n\n  /**\n   * Get vertical trajectory of the viewport\n   * @method _getViewportHeight\n   * @returns {Number}\n   */\n  ScrollProgress.prototype._getViewportHeight = function() {\n    return document.body.scrollHeight - window.innerHeight;\n  };\n\n  /**\n   * Get horizontal trajectory of the viewport\n   * @method _getViewportWidth\n   * @returns {Number}\n   */\n  ScrollProgress.prototype._getViewportWidth = function() {\n    return document.body.scrollWidth - window.innerWidth;\n  };\n\n  /**\n   * Get scroll progress on both axis\n   * @method _getProgress\n   * @returns {Object}\n   */\n  ScrollProgress.prototype._getProgress = function() {\n    var x = typeof window.scrollX === 'undefined'\n      ? window.pageXOffset\n      : window.scrollX;\n    var y = typeof window.scrollY === 'undefined'\n      ? window.pageYOffset\n      : window.scrollY;\n\n    return {\n      x: this._viewportWidth === 0\n        ? 0\n        : x / this._viewportWidth,\n      y: this._viewportHeight === 0\n        ? 0\n        : y / this._viewportHeight\n    };\n  };\n\n  /**\n   * Get scroll progress on both axis\n   * @method _getProgress\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype._onScroll = function() {\n    this._progress = this._getProgress();\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Update viewport metrics, recalculate progress and call update callback\n   * @method _onResize\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype._onResize = function() {\n    this._viewportHeight = this._getViewportHeight();\n    this._viewportWidth = this._getViewportWidth();\n\n    this._progress = this._getProgress();\n\n    // trigger update function\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Trigger update callback\n   * @method trigger\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype.trigger = function() {\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Destroy scroll observer, remove listeners and update callback\n   * @method destroy\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype.destroy = function() {\n    window.removeEventListener('scroll', this._onScroll);\n    window.removeEventListener('resize', this._onResize);\n    this._handleUpdate = null;\n  };\n\n  return ScrollProgress;\n\n})));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA/BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;;;;;;;;;;;ACPA;AACA;AACA;AACA,WACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}